- Type: File
  path: .radi/settings.yml
  Contents: |2
    Author: WunderRadi
    Client: Internal
    Country: LV
    Geo.City: RÄ«ga
    Geo.Country: LV
    Office: Riga
    Project: wundertest
    time: Mon Oct 24 14:51:39 EEST 2016
    
- Type: File
  path: .radi/commands.yml
  Contents: |2
    
    shell:
      description: Give a command shell, with access to the application
      image: quay.io/wunder/wundertools-image-fuzzy-developershell
      hostname: "shell"
      working_dir: /app
      volumes_from:
        - source
        - assets
      volumes:
        - "!:/app/pwd"
        - "./:/app/project"
        - "./source:/app/source"
        - "./settings:/app/settings"
        - "./assets:/app/assets" 
        - "./backups:/app/backup"
        - "./settings/drush:/app/.drush"
        - "./settings/drupal-console:/app/.drupal"
    
        - "~/.gitconfig:/app/.gitconfig:ro"
        - "~/.ssh:/app/.ssh:ro"
      links:
        - db
        - fpm
        - www
    
    drupal-init:
      description: Create a new Drupal8 project in ./source
      image: quay.io/wunder/wundertools-image-fuzzy-developershell
      hostname: "shell"
      entrypoint:
        - composer 
        - create-project 
        - drupal-composer/drupal-project:8.x-dev 
        - source
        - "--no-interaction"
      working_dir: /app/pwd
      volumes:
        - "!:/app/pwd"
    
        - "~/.gitconfig:/app/.gitconfig:ro"
        - "~/.ssh:/app/.ssh:ro"
    
    drupal:
      description: Run drupal console on the application
      image: quay.io/wunder/wundertools-image-fuzzy-developershell
      working_dir: /app/web
      entrypoint:
        - /app/vendor/bin/drupal
        - --ansi
      volumes_from:
        - source
        - assets
      volumes:
        - "./backups:/app/backup"
        - "./settings/drush:/app/.drush"
        - "./settings/drupal-console:/app/.drupal"
    
        - "~/.gitconfig:/app/.gitconfig:ro"
        - "~/.ssh:/app/.ssh:ro"
      links:
        - db
    
    composer:
      description: Run composer as a command in the source folder
      image: quay.io/wunder/wundertools-image-fuzzy-developershell
      entrypoint: 
        - composer
      working_dir: "/app/source"
      volumes:
        - "./source:/app/source"  
        - "~/.gitconfig:/app/.gitconfig:ro"
        - "~/.ssh:/app/.ssh:ro"
    
- Type: File
  path: docker-compose.yml
  Contents: |2
    # WunderTools docker-compose
    #
    version: "2"
    
    services:
    
      ####
      # Project related images
      #
      # Typically volume containers that are used to provide source and asset to
      # servers for the application.  The project related images are the focus of the
      # management tools approach to updating, archiving and distributing an application
      # and to provide the specifics of an application as a service.
      #
      # In production, any required asset or file for an application is provided
      # strictly as an images based resource, so that production services can be used
      # with only access to the contents of the compose.yml.
      # Assets and source should be built into application specific images, as described
      # below.  Assets can be quite bare, and built up on the server, or can be considered
      # a distributable resource, and built into the asset image)
      #
    
      ####
      # Source
      #
      # Source image holds any elements that are considered immutable in the system
      # Runtime volumes are added so that parts of this image can be mounted as
      # read only in other containers.
      # Production management relies on the source container to be immutable, and
      # that the source image versions are maintained in such a way that it is clear
      # which version should be used in production. The production tools perform no
      # archiving or management of the contents of the source image/container.
      #
      # e.g.:
      #  - php source code
      #  - js source code
      #  - css styling
      #  - php settings and configuration
      #  - yml configuration
      #
      source:
        image: "quay.io/wunder/wunder-alpine-base"
        command:
          - /bin/true
        volumes:
          - "./source/web:/app/web"
          - "./source/vendor:/app/vendor"
          - "./source/config:/app/config"
    
      ####
      # Assets
      #
      # In contrast to source, assets holds any mutable files and data that other
      # container may need access to.
      # Assets is a distributable image, with volumes that need to be managed in any
      # environment (backups, revisioned, distributed.) Asset volumes are typically
      # used with named-volumes in production environments, so they do not need to
      # have anything kept in image, but it can be advantageous to keep things in the
      # image.
      #
      assets:
        image: quay.io/wunder/wunder-alpine-base
        command:
          - /bin/true
        volumes:
          - "./assets/public:/app/web/sites/default/files"
          - "./assets/backup:/app/backup"
          - "./assets/private:/app/private"
    
      ####
      # Servers
      #
      # The following nodes are services that support the application.  Typically
      # the AMP stack is represented, along with any key-value, search and static-caching
      # servers used.
      #
      # It is optimal if the services use generic shared images, that are used across
      # instances, and across applications.  This makes the overally server impact low
      # and means that management tools can focus on the source and asset images
      #
    
      ####
      # DB node
      #
      db:
        image: quay.io/wunder/wundertools-image-fuzzy-mariadb
    
      ####
      # MemCacheD
      #
      memcache:
        image: quay.io/wunder/alpine-memcached
    
      ####
      # FPM node
      #
    
      fpm:
        image: quay.io/wunder/wundertools-image-fuzzy-php
        volumes_from:
          - source
          - assets
        links:
          - db:db.app
          - memcache:memcached.app
    
      ####
      # WWW node
      #
      www:
        image: quay.io/wunder/wundertools-image-fuzzy-nginx
        volumes_from:
          - source
          - assets
        environment:
          DNSDOCK_ALIAS: wundertools.docker
        links:
          - fpm:fpm.app
    
      ####
      # Static cache service
      #
      varnish:
        image: quay.io/wunder/alpine-varnish
        environment:
          VARNISH_BACKEND_HOST: backend.app
        links:
          - www:backend.app
    
- Type: File
  path: settings/drush/.gitkeep
  Contents: 
- Type: File
  path: settings/drupal-console/.gitkeep
  Contents: 
- Type: File
  path: source/.gitignore
  Contents: |2
    # Ignore directories generated by Composer
    vendor
    web/core
    web/modules/contrib
    web/themes/contrib
    web/profiles/contrib
    
    # this file is pretty big, and probably isn't needed in the template
    composer.lock
    
    # Ignore Drupal's file directory
    web/sites/*/files
    
- Type: File
  path: source/.travis.yml
  Contents: |2
    language: php
    php:
      - 5.5
      - 5.6
      - 7.0
    
    sudo: false
    
    env:
      global:
        - SIMPLETEST_DB=sqlite://tmp/site.sqlite
        - SIMPLETEST_BASE_URL="http://127.0.0.1:8080"
      matrix:
        - RELEASE=stable
        - RELEASE=dev
    
    before_install:
      - echo 'sendmail_path = /bin/true' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
      - phpenv config-rm xdebug.ini
      - composer --verbose self-update
      - composer --version
    
    install:
      - composer --verbose install
    
    script:
      - if [[ $RELEASE = dev ]]; then composer --verbose require --no-update drupal/core:8.1.x-dev; fi;
      - if [[ $RELEASE = dev ]]; then composer --verbose update; fi;
      - cd $TRAVIS_BUILD_DIR/web
      - ./../vendor/bin/drush site-install --verbose --yes --db-url=sqlite://tmp/site.sqlite
      - ./../vendor/bin/drush runserver http://127.0.0.1:8080 &
      - sleep 3
      # Skip core/tests/Drupal/Tests/ComposerIntegrationTest.php because web/ has no composer.json
      - ./../vendor/bin/phpunit -c core --testsuite unit --exclude-group Composer
      - ./../vendor/bin/drush
      - ./../vendor/bin/drupal
    
- Type: File
  path: source/README.md
  Contents: |2
    # Composer template for Drupal projects
    
    [![Build Status](https://travis-ci.org/drupal-composer/drupal-project.svg?branch=8.x)](https://travis-ci.org/drupal-composer/drupal-project)
    
    This project template should provide a kickstart for managing your site
    dependencies with [Composer](https://getcomposer.org/).
    
    If you want to know how to use it as replacement for
    [Drush Make](https://github.com/drush-ops/drush/blob/master/docs/make.md) visit
    the [Documentation on drupal.org](https://www.drupal.org/node/2471553).
    
    ## Usage
    
    First you need to [install composer](https://getcomposer.org/doc/00-intro.md#installation-linux-unix-osx).
    
    > Note: The instructions below refer to the [global composer installation](https://getcomposer.org/doc/00-intro.md#globally).
    You might need to replace `composer` with `php composer.phar` (or similar) 
    for your setup.
    
    After that you can create the project:
    
    ```
    composer create-project drupal-composer/drupal-project:8.x-dev some-dir --stability dev --no-interaction
    ```
    
    With `composer require ...` you can download new dependencies to your 
    installation.
    
    ```
    cd some-dir
    composer require drupal/devel:8.*
    ```
    
    The `composer create-project` command passes ownership of all files to the 
    project that is created. You should create a new git repository, and commit 
    all files not excluded by the .gitignore file.
    
    ## What does the template do?
    
    When installing the given `composer.json` some tasks are taken care of:
    
    * Drupal will be installed in the `web`-directory.
    * Autoloader is implemented to use the generated composer autoloader in `vendor/autoload.php`,
      instead of the one provided by Drupal (`web/vendor/autoload.php`).
    * Modules (packages of type `drupal-module`) will be placed in `web/modules/contrib/`
    * Theme (packages of type `drupal-theme`) will be placed in `web/themes/contrib/`
    * Profiles (packages of type `drupal-profile`) will be placed in `web/profiles/contrib/`
    * Creates default writable versions of `settings.php` and `services.yml`.
    * Creates `sites/default/files`-directory.
    * Latest version of drush is installed locally for use at `vendor/bin/drush`.
    * Latest version of DrupalConsole is installed locally for use at `vendor/bin/drupal`.
    
    ## Updating Drupal Core
    
    This project will attempt to keep all of your Drupal Core files up-to-date; the 
    project [drupal-composer/drupal-scaffold](https://github.com/drupal-composer/drupal-scaffold) 
    is used to ensure that your scaffold files are updated every time drupal/core is 
    updated. If you customize any of the "scaffolding" files (commonly .htaccess), 
    you may need to merge conflicts if any of your modfied files are updated in a 
    new release of Drupal core.
    
    Follow the steps below to update your core files.
    
    1. Run `composer update drupal/core --with-dependencies` to update Drupal Core and its dependencies.
    1. Run `git diff` to determine if any of the scaffolding files have changed. 
       Review the files for any changes and restore any customizations to 
      `.htaccess` or `robots.txt`.
    1. Commit everything all together in a single commit, so `web` will remain in
       sync with the `core` when checking out branches or running `git bisect`.
    1. In the event that there are non-trivial conflicts in step 2, you may wish 
       to perform these steps on a branch, and use `git merge` to combine the 
       updated core files with your customized files. This facilitates the use 
       of a [three-way merge tool such as kdiff3](http://www.gitshah.com/2010/12/how-to-setup-kdiff-as-diff-tool-for-git.html). This setup is not necessary if your changes are simple; 
       keeping all of your modifications at the beginning or end of the file is a 
       good strategy to keep merges easy.
    
    ## Generate composer.json from existing project
    
    With using [the "Composer Generate" drush extension](https://www.drupal.org/project/composer_generate)
    you can now generate a basic `composer.json` file from an existing project. Note
    that the generated `composer.json` might differ from this project's file.
    
    
    ## FAQ
    
    ### Should I commit the contrib modules I download
    
    Composer recommends **no**. They provide [argumentation against but also 
    workrounds if a project decides to do it anyway](https://getcomposer.org/doc/faqs/should-i-commit-the-dependencies-in-my-vendor-directory.md).
    
    ### How can I apply patches to downloaded modules?
    
    If you need to apply patches (depending on the project being modified, a pull 
    request is often a better solution), you can do so with the 
    [composer-patches](https://github.com/cweagans/composer-patches) plugin.
    
    To add a patch to drupal module foobar insert the patches section in the extra 
    section of composer.json:
    ```json
    "extra": {
        "patches": {
            "drupal/foobar": {
                "Patch description": "URL to patch"
            }
        }
    }
    ```
    
- Type: File
  path: source/composer.json
  Contents: |2
    {
        "name": "drupal-composer/drupal-project",
        "description": "Project template for Drupal 8 projects with composer",
        "type": "project",
        "license": "GPL-2.0+",
        "authors": [
            {
                "name": "",
                "role": ""
            }
        ],
        "repositories": [
            {
                "type": "composer",
                "url": "https://packagist.drupal-composer.org"
            }
        ],
        "require": {
            "composer/installers": "^1.0.20",
            "drupal-composer/drupal-scaffold": "^2.0.1",
            "cweagans/composer-patches": "~1.0",
            "drupal/core": "~8.0",
            "drush/drush": "~8.0",
            "drupal/console": "~1.0"
        },
        "require-dev": {
            "behat/mink": "~1.7",
            "behat/mink-goutte-driver": "~1.2",
            "jcalderonzumba/gastonjs": "~1.0.2",
            "jcalderonzumba/mink-phantomjs-driver": "~0.3.1",
            "mikey179/vfsStream": "~1.2",
            "phpunit/phpunit": "~4.8",
            "symfony/css-selector": "~2.8"
        },
        "conflict": {
            "drupal/drupal": "*"
        },
        "minimum-stability": "dev",
        "prefer-stable": true,
        "autoload": {
            "classmap": [
                "scripts/composer/ScriptHandler.php"
            ]
        },
        "scripts": {
            "drupal-scaffold": "DrupalComposer\\DrupalScaffold\\Plugin::scaffold",
            "pre-install-cmd": [
                "DrupalProject\\composer\\ScriptHandler::checkComposerVersion"
            ],
            "pre-update-cmd": [
                "DrupalProject\\composer\\ScriptHandler::checkComposerVersion"
            ],
            "post-install-cmd": [
                "DrupalProject\\composer\\ScriptHandler::createRequiredFiles"
            ],
            "post-update-cmd": [
                "DrupalProject\\composer\\ScriptHandler::createRequiredFiles"
            ]
        },
        "extra": {
            "installer-paths": {
                "web/core": ["type:drupal-core"],
                "web/libraries/{$name}": ["type:drupal-library"],
                "web/modules/contrib/{$name}": ["type:drupal-module"],
                "web/profiles/contrib/{$name}": ["type:drupal-profile"],
                "web/themes/contrib/{$name}": ["type:drupal-theme"],
                "drush/contrib/{$name}": ["type:drupal-drush"]
            }
        }
    }
    
- Type: File
  path: source/phpunit.xml.dist
  Contents: |2
    <?xml version="1.0" encoding="UTF-8"?>
    
    <phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:noNamespaceSchemaLocation="http://schema.phpunit.de/4.1/phpunit.xsd"
             backupGlobals="false"
             colors="true"
             bootstrap="vendor/autoload.php"
             verbose="true"
            >
        <testsuites>
            <testsuite name="drupal-composer-project tests">
                <directory>./test/</directory>
            </testsuite>
        </testsuites>
    </phpunit>
    
- Type: File
  path: source/scripts/composer/ScriptHandler.php
  Contents: |2
    <?php
    
    /**
     * @file
     * Contains \DrupalProject\composer\ScriptHandler.
     */
    
    namespace DrupalProject\composer;
    
    use Composer\Script\Event;
    use Composer\Semver\Comparator;
    use Symfony\Component\Filesystem\Filesystem;
    
    class ScriptHandler {
    
      protected static function getDrupalRoot($project_root) {
        return $project_root . '/web';
      }
    
      public static function createRequiredFiles(Event $event) {
        $fs = new Filesystem();
        $root = static::getDrupalRoot(getcwd());
    
        $dirs = [
          'modules',
          'profiles',
          'themes',
        ];
    
        // Required for unit testing
        foreach ($dirs as $dir) {
          if (!$fs->exists($root . '/'. $dir)) {
            $fs->mkdir($root . '/'. $dir);
            $fs->touch($root . '/'. $dir . '/.gitkeep');
          }
        }
    
        // Prepare the settings file for installation
        if (!$fs->exists($root . '/sites/default/settings.php') and $fs->exists($root . '/sites/default/default.settings.php')) {
          $fs->copy($root . '/sites/default/default.settings.php', $root . '/sites/default/settings.php');
          $fs->chmod($root . '/sites/default/settings.php', 0666);
          $event->getIO()->write("Create a sites/default/settings.php file with chmod 0666");
        }
    
        // Prepare the services file for installation
        if (!$fs->exists($root . '/sites/default/services.yml') and $fs->exists($root . '/sites/default/default.services.yml')) {
          $fs->copy($root . '/sites/default/default.services.yml', $root . '/sites/default/services.yml');
          $fs->chmod($root . '/sites/default/services.yml', 0666);
          $event->getIO()->write("Create a sites/default/services.yml file with chmod 0666");
        }
    
        // Create the files directory with chmod 0777
        if (!$fs->exists($root . '/sites/default/files')) {
          $oldmask = umask(0);
          $fs->mkdir($root . '/sites/default/files', 0777);
          umask($oldmask);
          $event->getIO()->write("Create a sites/default/files directory with chmod 0777");
        }
      }
    
      /**
       * Checks if the installed version of Composer is compatible.
       *
       * Composer 1.0.0 and higher consider a `composer install` without having a
       * lock file present as equal to `composer update`. We do not ship with a lock
       * file to avoid merge conflicts downstream, meaning that if a project is
       * installed with an older version of Composer the scaffolding of Drupal will
       * not be triggered. We check this here instead of in drupal-scaffold to be
       * able to give immediate feedback to the end user, rather than failing the
       * installation after going through the lengthy process of compiling and
       * downloading the Composer dependencies.
       *
       * @see https://github.com/composer/composer/pull/5035
       */
      public static function checkComposerVersion(Event $event) {
        $composer = $event->getComposer();
        $io = $event->getIO();
    
        $version = $composer::VERSION;
    
        // If Composer is installed through git we have no easy way to determine if
        // it is new enough, just display a warning.
        if ($version === '@package_version@') {
          $io->writeError('<warning>You are running a development version of Composer. If you experience problems, please update Composer to the latest stable version.</warning>');
        }
        elseif (Comparator::lessThan($version, '1.0.0')) {
          $io->writeError('<error>Drupal-project requires Composer version 1.0.0 or higher. Please update your Composer before continuing</error>.');
          exit(1);
        }
      }
    
    }
    
- Type: File
  path: source/web/.csslintrc
  Contents: |2
    {
      "important": true,
      "adjoining-classes": false,
      "known-properties": true,
      "box-sizing": false,
      "box-model": true,
      "overqualified-elements": true,
      "display-property-grouping": true,
      "bulletproof-font-face": false,
      "compatible-vendor-prefixes": false,
      "regex-selectors": false,
      "errors": false,
      "duplicate-background-images": true,
      "duplicate-properties": true,
      "empty-rules": true,
      "selector-max-approaching": false,
      "gradients": false,
      "fallback-colors": false,
      "font-sizes": false,
      "font-faces": false,
      "floats": false,
      "star-property-hack": true,
      "outline-none": true,
      "import": true,
      "ids": true,
      "underscore-property-hack": true,
      "rules-count": false,
      "qualified-headings": true,
      "selector-max": false,
      "shorthand": true,
      "text-indent": true,
      "unique-headings": true,
      "universal-selector": false,
      "unqualified-attributes": true,
      "vendor-prefix": true,
      "zero-units": true
    }
    
- Type: File
  path: source/web/.editorconfig
  Contents: |2
    # Drupal editor configuration normalization
    # @see http://editorconfig.org/
    
    # This is the top-most .editorconfig file; do not search in parent directories.
    root = true
    
    # All files.
    [*]
    end_of_line = LF
    indent_style = space
    indent_size = 2
    charset = utf-8
    trim_trailing_whitespace = true
    insert_final_newline = true
    
    [composer.json]
    indent_size = 4
    
- Type: File
  path: source/web/.eslintignore
  Contents: |2
    core/assets/vendor/**/*
    core/modules/locale/tests/locale_test.js
    vendor/**/*
    sites/**/files/**/*
    libraries/**/*
    sites/**/libraries/**/*
    profiles/**/libraries/**/*
    **/js_test_files/**/*
    
- Type: File
  path: source/web/.eslintrc
  Contents: |2
    {
      "extends": "./core/.eslintrc"
    }
    
- Type: File
  path: source/web/.gitattributes
  Contents: |2
    # Drupal git normalization
    # @see https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html
    # @see https://www.drupal.org/node/1542048
    
    # Normally these settings would be done with macro attributes for improved
    # readability and easier maintenance. However macros can only be defined at the
    # repository root directory. Drupal avoids making any assumptions about where it
    # is installed.
    
    # Define text file attributes.
    # - Treat them as text.
    # - Ensure no CRLF line-endings, neither on checkout nor on checkin.
    # - Detect whitespace errors.
    #   - Exposed by default in `git diff --color` on the CLI.
    #   - Validate with `git diff --check`.
    #   - Deny applying with `git apply --whitespace=error-all`.
    #   - Fix automatically with `git apply --whitespace=fix`.
    
    # Auto-detect text files, ensure they use LF.
    *         text=auto eol=lf
    
    *.css     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.engine  text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2 diff=php
    *.html    text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2 diff=html
    *.inc     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2 diff=php
    *.info    text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.install text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2 diff=php
    *.js      text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.json    text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.lock    text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.md      text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.module  text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2 diff=php
    *.php     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2 diff=php
    *.po      text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.script  text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.sh      text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2 diff=php
    *.sql     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.test    text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2 diff=php
    *.theme   text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2 diff=php
    *.txt     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.xml     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    *.yml     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2
    
    # Define binary file attributes.
    # - Do not treat them as text.
    # - Include binary diff in patches instead of "binary files differ."
    *.gif     -text diff
    *.gz      -text diff
    *.ico     -text diff
    *.jpg     -text diff
    *.png     -text diff
    *.phar    -text diff
    *.exe     -text diff
    *.ttf     -text diff
    
- Type: File
  path: source/web/.htaccess
  Contents: |2
    #
    # Apache/PHP/Drupal settings:
    #
    
    # Protect files and directories from prying eyes.
    <FilesMatch "\.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock))$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$">
      <IfModule mod_authz_core.c>
        Require all denied
      </IfModule>
      <IfModule !mod_authz_core.c>
        Order allow,deny
      </IfModule>
    </FilesMatch>
    
    # Don't show directory listings for URLs which map to a directory.
    Options -Indexes
    
    # Set the default handler.
    DirectoryIndex index.php index.html index.htm
    
    # Add correct encoding for SVGZ.
    AddType image/svg+xml svg svgz
    AddEncoding gzip svgz
    
    # Most of the following PHP settings cannot be changed at runtime. See
    # sites/default/default.settings.php and
    # Drupal\Core\DrupalKernel::bootEnvironment() for settings that can be
    # changed at runtime.
    
    # PHP 5, Apache 1 and 2.
    <IfModule mod_php5.c>
      php_value assert.active                   0
      php_flag session.auto_start               off
      php_value mbstring.http_input             pass
      php_value mbstring.http_output            pass
      php_flag mbstring.encoding_translation    off
      # PHP 5.6 has deprecated $HTTP_RAW_POST_DATA and produces warnings if this is
      # not set.
      php_value always_populate_raw_post_data   -1
    </IfModule>
    
    # Requires mod_expires to be enabled.
    <IfModule mod_expires.c>
      # Enable expirations.
      ExpiresActive On
    
      # Cache all files for 2 weeks after access (A).
      ExpiresDefault A1209600
    
      <FilesMatch \.php$>
        # Do not allow PHP scripts to be cached unless they explicitly send cache
        # headers themselves. Otherwise all scripts would have to overwrite the
        # headers set by mod_expires if they want another caching behavior. This may
        # fail if an error occurs early in the bootstrap process, and it may cause
        # problems if a non-Drupal PHP file is installed in a subdirectory.
        ExpiresActive Off
      </FilesMatch>
    </IfModule>
    
    # Set a fallback resource if mod_rewrite is not enabled. This allows Drupal to
    # work without clean URLs. This requires Apache version >= 2.2.16. If Drupal is
    # not accessed by the top level URL (i.e.: http://example.com/drupal/ instead of
    # http://example.com/), the path to index.php will need to be adjusted.
    <IfModule !mod_rewrite.c>
      FallbackResource /index.php
    </IfModule>
    
    # Various rewrite rules.
    <IfModule mod_rewrite.c>
      RewriteEngine on
    
      # Set "protossl" to "s" if we were accessed via https://.  This is used later
      # if you enable "www." stripping or enforcement, in order to ensure that
      # you don't bounce between http and https.
      RewriteRule ^ - [E=protossl]
      RewriteCond %{HTTPS} on
      RewriteRule ^ - [E=protossl:s]
    
      # Make sure Authorization HTTP header is available to PHP
      # even when running as CGI or FastCGI.
      RewriteRule ^ - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
    
      # Block access to "hidden" directories whose names begin with a period. This
      # includes directories used by version control systems such as Subversion or
      # Git to store control files. Files whose names begin with a period, as well
      # as the control files used by CVS, are protected by the FilesMatch directive
      # above.
      #
      # NOTE: This only works when mod_rewrite is loaded. Without mod_rewrite, it is
      # not possible to block access to entire directories from .htaccess because
      # <DirectoryMatch> is not allowed here.
      #
      # If you do not have mod_rewrite installed, you should remove these
      # directories from your webroot or otherwise protect them from being
      # downloaded.
      RewriteRule "(^|/)\.(?!well-known)" - [F]
    
      # If your site can be accessed both with and without the 'www.' prefix, you
      # can use one of the following settings to redirect users to your preferred
      # URL, either WITH or WITHOUT the 'www.' prefix. Choose ONLY one option:
      #
      # To redirect all users to access the site WITH the 'www.' prefix,
      # (http://example.com/foo will be redirected to http://www.example.com/foo)
      # uncomment the following:
      # RewriteCond %{HTTP_HOST} .
      # RewriteCond %{HTTP_HOST} !^www\. [NC]
      # RewriteRule ^ http%{ENV:protossl}://www.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
      #
      # To redirect all users to access the site WITHOUT the 'www.' prefix,
      # (http://www.example.com/foo will be redirected to http://example.com/foo)
      # uncomment the following:
      # RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
      # RewriteRule ^ http%{ENV:protossl}://%1%{REQUEST_URI} [L,R=301]
    
      # Modify the RewriteBase if you are using Drupal in a subdirectory or in a
      # VirtualDocumentRoot and the rewrite rules are not working properly.
      # For example if your site is at http://example.com/drupal uncomment and
      # modify the following line:
      # RewriteBase /drupal
      #
      # If your site is running in a VirtualDocumentRoot at http://example.com/,
      # uncomment the following line:
      # RewriteBase /
    
      # Redirect common PHP files to their new locations.
      RewriteCond %{REQUEST_URI} ^(.*)?/(install.php) [OR]
      RewriteCond %{REQUEST_URI} ^(.*)?/(rebuild.php)
      RewriteCond %{REQUEST_URI} !core
      RewriteRule ^ %1/core/%2 [L,QSA,R=301]
    
      # Rewrite install.php during installation to see if mod_rewrite is working
      RewriteRule ^core/install.php core/install.php?rewrite=ok [QSA,L]
    
      # Pass all requests not referring directly to files in the filesystem to
      # index.php.
      RewriteCond %{REQUEST_FILENAME} !-f
      RewriteCond %{REQUEST_FILENAME} !-d
      RewriteCond %{REQUEST_URI} !=/favicon.ico
      RewriteRule ^ index.php [L]
    
      # For security reasons, deny access to other PHP files on public sites.
      # Note: The following URI conditions are not anchored at the start (^),
      # because Drupal may be located in a subdirectory. To further improve
      # security, you can replace '!/' with '!^/'.
      # Allow access to PHP files in /core (like authorize.php or install.php):
      RewriteCond %{REQUEST_URI} !/core/[^/]*\.php$
      # Allow access to test-specific PHP files:
      RewriteCond %{REQUEST_URI} !/core/modules/system/tests/https?.php
      # Allow access to Statistics module's custom front controller.
      # Copy and adapt this rule to directly execute PHP files in contributed or
      # custom modules or to run another PHP application in the same directory.
      RewriteCond %{REQUEST_URI} !/core/modules/statistics/statistics.php$
      # Deny access to any other PHP files that do not match the rules above.
      # Specifically, disallow autoload.php from being served directly.
      RewriteRule "^(.+/.*|autoload)\.php($|/)" - [F]
    
      # Rules to correctly serve gzip compressed CSS and JS files.
      # Requires both mod_rewrite and mod_headers to be enabled.
      <IfModule mod_headers.c>
        # Serve gzip compressed CSS files if they exist and the client accepts gzip.
        RewriteCond %{HTTP:Accept-encoding} gzip
        RewriteCond %{REQUEST_FILENAME}\.gz -s
        RewriteRule ^(.*)\.css $1\.css\.gz [QSA]
    
        # Serve gzip compressed JS files if they exist and the client accepts gzip.
        RewriteCond %{HTTP:Accept-encoding} gzip
        RewriteCond %{REQUEST_FILENAME}\.gz -s
        RewriteRule ^(.*)\.js $1\.js\.gz [QSA]
    
        # Serve correct content types, and prevent mod_deflate double gzip.
        RewriteRule \.css\.gz$ - [T=text/css,E=no-gzip:1]
        RewriteRule \.js\.gz$ - [T=text/javascript,E=no-gzip:1]
    
        <FilesMatch "(\.js\.gz|\.css\.gz)$">
          # Serve correct encoding type.
          Header set Content-Encoding gzip
          # Force proxies to cache gzipped & non-gzipped css/js files separately.
          Header append Vary Accept-Encoding
        </FilesMatch>
      </IfModule>
    </IfModule>
    
    # Various header fixes.
    <IfModule mod_headers.c>
      # Disable content sniffing, since it's an attack vector.
      Header always set X-Content-Type-Options nosniff
      # Disable Proxy header, since it's an attack vector.
      RequestHeader unset Proxy
    </IfModule>
    
- Type: File
  path: source/web/index.php
  Contents: |2
    <?php
    
    /**
     * @file
     * The PHP page that serves all page requests on a Drupal installation.
     *
     * All Drupal code is released under the GNU General Public License.
     * See COPYRIGHT.txt and LICENSE.txt files in the "core" directory.
     */
    
    use Drupal\Core\DrupalKernel;
    use Symfony\Component\HttpFoundation\Request;
    
    $autoloader = require_once 'autoload.php';
    
    $kernel = new DrupalKernel('prod', $autoloader);
    
    $request = Request::createFromGlobals();
    $response = $kernel->handle($request);
    $response->send();
    
    $kernel->terminate($request, $response);
    
- Type: File
  path: source/web/robots.txt
  Contents: |2
    #
    # robots.txt
    #
    # This file is to prevent the crawling and indexing of certain parts
    # of your site by web crawlers and spiders run by sites like Yahoo!
    # and Google. By telling these "robots" where not to go on your site,
    # you save bandwidth and server resources.
    #
    # This file will be ignored unless it is at the root of your host:
    # Used:    http://example.com/robots.txt
    # Ignored: http://example.com/site/robots.txt
    #
    # For more information about the robots.txt standard, see:
    # http://www.robotstxt.org/robotstxt.html
    
    User-agent: *
    # CSS, JS, Images
    Allow: /core/*.css$
    Allow: /core/*.css?
    Allow: /core/*.js$
    Allow: /core/*.js?
    Allow: /core/*.gif
    Allow: /core/*.jpg
    Allow: /core/*.jpeg
    Allow: /core/*.png
    Allow: /core/*.svg
    Allow: /profiles/*.css$
    Allow: /profiles/*.css?
    Allow: /profiles/*.js$
    Allow: /profiles/*.js?
    Allow: /profiles/*.gif
    Allow: /profiles/*.jpg
    Allow: /profiles/*.jpeg
    Allow: /profiles/*.png
    Allow: /profiles/*.svg
    # Directories
    Disallow: /core/
    Disallow: /profiles/
    # Files
    Disallow: /README.txt
    Disallow: /web.config
    # Paths (clean URLs)
    Disallow: /admin/
    Disallow: /comment/reply/
    Disallow: /filter/tips/
    Disallow: /node/add/
    Disallow: /search/
    Disallow: /user/register/
    Disallow: /user/password/
    Disallow: /user/login/
    Disallow: /user/logout/
    # Paths (no clean URLs)
    Disallow: /index.php/admin/
    Disallow: /index.php/comment/reply/
    Disallow: /index.php/filter/tips/
    Disallow: /index.php/node/add/
    Disallow: /index.php/search/
    Disallow: /index.php/user/password/
    Disallow: /index.php/user/register/
    Disallow: /index.php/user/login/
    Disallow: /index.php/user/logout/
    
- Type: File
  path: source/web/sites/development.services.yml
  Contents: |2
    # Local development services.
    #
    # To activate this feature, follow the instructions at the top of the
    # 'example.settings.local.php' file, which sits next to this file.
    services:
      cache.backend.null:
        class: Drupal\Core\Cache\NullBackendFactory
    
- Type: File
  path: source/web/update.php
  Contents: |2
    <?php
    
    /**
     * @file
     * The PHP page that handles updating the Drupal installation.
     *
     * All Drupal code is released under the GNU General Public License.
     * See COPYRIGHT.txt and LICENSE.txt files in the "core" directory.
     */
    
    use Drupal\Core\Update\UpdateKernel;
    use Symfony\Component\HttpFoundation\Request;
    
    $autoloader = require_once 'autoload.php';
    
    $kernel = new UpdateKernel('prod', $autoloader, FALSE);
    $request = Request::createFromGlobals();
    
    $response = $kernel->handle($request);
    $response->send();
    
    $kernel->terminate($request, $response);
    
- Type: File
  path: source/web/web.config
  Contents: |2
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration>
      <system.webServer>
        <!-- Don't show directory listings for URLs which map to a directory. -->
        <directoryBrowse enabled="false" />
    
        <!--
           Caching configuration was not delegated by default. Some hosters may not
           delegate the caching configuration to site owners by default and that
           may cause errors when users install. Uncomment this if you want to and
           are allowed to enable caching.
         -->
        <!--
        <caching>
          <profiles>
            <add extension=".php" policy="DisableCache" kernelCachePolicy="DisableCache" />
            <add extension=".html" policy="CacheForTimePeriod" kernelCachePolicy="CacheForTimePeriod" duration="14:00:00" />
          </profiles>
        </caching>
         -->
    
        <rewrite>
          <rules>
            <rule name="Protect files and directories from prying eyes" stopProcessing="true">
              <match url="\.(engine|inc|install|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml|svn-base)$|^(code-style\.pl|Entries.*|Repository|Root|Tag|Template|all-wcprops|entries|format|composer\.(json|lock))$" />
              <action type="CustomResponse" statusCode="403" subStatusCode="0" statusReason="Forbidden" statusDescription="Access is forbidden." />
            </rule>
    
            <rule name="Force simple error message for requests for non-existent favicon.ico" stopProcessing="true">
              <match url="favicon\.ico" />
              <action type="CustomResponse" statusCode="404" subStatusCode="1" statusReason="File Not Found" statusDescription="The requested file favicon.ico was not found" />
              <conditions>
                <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
              </conditions>
            </rule>
    
            <rule name="Erase HTTP_PROXY" patternSyntax="Wildcard">
              <match url="*.*" />
              <serverVariables>
                <set name="HTTP_PROXY" value="" />
              </serverVariables>
              <action type="None" />
            </rule>
    
        <!-- To redirect all users to access the site WITH the 'www.' prefix,
         http://example.com/foo will be redirected to http://www.example.com/foo)
         adapt and uncomment the following:   -->
        <!--
            <rule name="Redirect to add www" stopProcessing="true">
              <match url="^(.*)$" ignoreCase="false" />
              <conditions>
                <add input="{HTTP_HOST}" pattern="^example\.com$" />
              </conditions>
              <action type="Redirect" redirectType="Permanent" url="http://www.example.com/{R:1}" />
            </rule>
        -->
    
        <!-- To redirect all users to access the site WITHOUT the 'www.' prefix,
         http://www.example.com/foo will be redirected to http://example.com/foo)
         adapt and uncomment the following:   -->
        <!--
            <rule name="Redirect to remove www" stopProcessing="true">
              <match url="^(.*)$" ignoreCase="false" />
              <conditions>
                <add input="{HTTP_HOST}" pattern="^www\.example\.com$" />
              </conditions>
              <action type="Redirect" redirectType="Permanent" url="http://example.com/{R:1}" />
            </rule>
        -->
    
            <!-- Pass all requests not referring directly to files in the filesystem
             to index.php. -->
            <rule name="Short URLS" stopProcessing="true">
              <match url="^(.*)$" ignoreCase="false" />
              <conditions>
                <add input="{REQUEST_FILENAME}" matchType="IsFile" ignoreCase="false" negate="true" />
                <add input="{REQUEST_FILENAME}" matchType="IsDirectory" ignoreCase="false" negate="true" />
                <add input="{URL}" pattern="^/favicon.ico$" ignoreCase="false" negate="true" />
              </conditions>
              <action type="Rewrite" url="index.php" />
            </rule>
          </rules>
        </rewrite>
    
      <!-- If running Windows Server 2008 R2 this can be commented out -->
        <!-- httpErrors>
          <remove statusCode="404" subStatusCode="-1" />
          <error statusCode="404" prefixLanguageFilePath="" path="/index.php" responseMode="ExecuteURL" />
        </httpErrors -->
    
        <defaultDocument>
         <!-- Set the default document -->
          <files>
             <clear />
            <add value="index.php" />
          </files>
        </defaultDocument>
    
      </system.webServer>
    </configuration>
    
- Type: File
  path: source/web/autoload.php
  Contents: |2
    <?php
    
    /**
     * @file
     * Includes the autoloader created by Composer.
     * This file was generated by drupal-composer/drupal-scaffold.
     * https://github.com/drupal-composer/drupal-scaffold
     *
     * @see composer.json
     * @see index.php
     * @see core/install.php
     * @see core/rebuild.php
     * @see core/modules/statistics/statistics.php
     */
    
    return require __DIR__ . '/../vendor/autoload.php';
    
- Type: File
  path: source/web/modules/custom/.gitkeep
  Contents: 
- Type: File
  path: source/web/profiles/.gitkeep
  Contents: 
- Type: File
  path: source/web/themes/.gitkeep
  Contents: 
- Type: File
  path: source/config/sync/.gitkeep
  Contents: 
- Type: File
  path: source/LICENSE
  Contents: |2
                        GNU GENERAL PUBLIC LICENSE
                           Version 2, June 1991
    
     Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>
     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.
    
                                Preamble
    
      The licenses for most software are designed to take away your
    freedom to share and change it.  By contrast, the GNU General Public
    License is intended to guarantee your freedom to share and change free
    software--to make sure the software is free for all its users.  This
    General Public License applies to most of the Free Software
    Foundation's software and to any other program whose authors commit to
    using it.  (Some other Free Software Foundation software is covered by
    the GNU Lesser General Public License instead.)  You can apply it to
    your programs, too.
    
      When we speak of free software, we are referring to freedom, not
    price.  Our General Public Licenses are designed to make sure that you
    have the freedom to distribute copies of free software (and charge for
    this service if you wish), that you receive source code or can get it
    if you want it, that you can change the software or use pieces of it
    in new free programs; and that you know you can do these things.
    
      To protect your rights, we need to make restrictions that forbid
    anyone to deny you these rights or to ask you to surrender the rights.
    These restrictions translate to certain responsibilities for you if you
    distribute copies of the software, or if you modify it.
    
      For example, if you distribute copies of such a program, whether
    gratis or for a fee, you must give the recipients all the rights that
    you have.  You must make sure that they, too, receive or can get the
    source code.  And you must show them these terms so they know their
    rights.
    
      We protect your rights with two steps: (1) copyright the software, and
    (2) offer you this license which gives you legal permission to copy,
    distribute and/or modify the software.
    
      Also, for each author's protection and ours, we want to make certain
    that everyone understands that there is no warranty for this free
    software.  If the software is modified by someone else and passed on, we
    want its recipients to know that what they have is not the original, so
    that any problems introduced by others will not reflect on the original
    authors' reputations.
    
      Finally, any free program is threatened constantly by software
    patents.  We wish to avoid the danger that redistributors of a free
    program will individually obtain patent licenses, in effect making the
    program proprietary.  To prevent this, we have made it clear that any
    patent must be licensed for everyone's free use or not licensed at all.
    
      The precise terms and conditions for copying, distribution and
    modification follow.
    
                        GNU GENERAL PUBLIC LICENSE
       TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
    
      0. This License applies to any program or other work which contains
    a notice placed by the copyright holder saying it may be distributed
    under the terms of this General Public License.  The "Program", below,
    refers to any such program or work, and a "work based on the Program"
    means either the Program or any derivative work under copyright law:
    that is to say, a work containing the Program or a portion of it,
    either verbatim or with modifications and/or translated into another
    language.  (Hereinafter, translation is included without limitation in
    the term "modification".)  Each licensee is addressed as "you".
    
    Activities other than copying, distribution and modification are not
    covered by this License; they are outside its scope.  The act of
    running the Program is not restricted, and the output from the Program
    is covered only if its contents constitute a work based on the
    Program (independent of having been made by running the Program).
    Whether that is true depends on what the Program does.
    
      1. You may copy and distribute verbatim copies of the Program's
    source code as you receive it, in any medium, provided that you
    conspicuously and appropriately publish on each copy an appropriate
    copyright notice and disclaimer of warranty; keep intact all the
    notices that refer to this License and to the absence of any warranty;
    and give any other recipients of the Program a copy of this License
    along with the Program.
    
    You may charge a fee for the physical act of transferring a copy, and
    you may at your option offer warranty protection in exchange for a fee.
    
      2. You may modify your copy or copies of the Program or any portion
    of it, thus forming a work based on the Program, and copy and
    distribute such modifications or work under the terms of Section 1
    above, provided that you also meet all of these conditions:
    
        a) You must cause the modified files to carry prominent notices
        stating that you changed the files and the date of any change.
    
        b) You must cause any work that you distribute or publish, that in
        whole or in part contains or is derived from the Program or any
        part thereof, to be licensed as a whole at no charge to all third
        parties under the terms of this License.
    
        c) If the modified program normally reads commands interactively
        when run, you must cause it, when started running for such
        interactive use in the most ordinary way, to print or display an
        announcement including an appropriate copyright notice and a
        notice that there is no warranty (or else, saying that you provide
        a warranty) and that users may redistribute the program under
        these conditions, and telling the user how to view a copy of this
        License.  (Exception: if the Program itself is interactive but
        does not normally print such an announcement, your work based on
        the Program is not required to print an announcement.)
    
    These requirements apply to the modified work as a whole.  If
    identifiable sections of that work are not derived from the Program,
    and can be reasonably considered independent and separate works in
    themselves, then this License, and its terms, do not apply to those
    sections when you distribute them as separate works.  But when you
    distribute the same sections as part of a whole which is a work based
    on the Program, the distribution of the whole must be on the terms of
    this License, whose permissions for other licensees extend to the
    entire whole, and thus to each and every part regardless of who wrote it.
    
    Thus, it is not the intent of this section to claim rights or contest
    your rights to work written entirely by you; rather, the intent is to
    exercise the right to control the distribution of derivative or
    collective works based on the Program.
    
    In addition, mere aggregation of another work not based on the Program
    with the Program (or with a work based on the Program) on a volume of
    a storage or distribution medium does not bring the other work under
    the scope of this License.
    
      3. You may copy and distribute the Program (or a work based on it,
    under Section 2) in object code or executable form under the terms of
    Sections 1 and 2 above provided that you also do one of the following:
    
        a) Accompany it with the complete corresponding machine-readable
        source code, which must be distributed under the terms of Sections
        1 and 2 above on a medium customarily used for software interchange; or,
    
        b) Accompany it with a written offer, valid for at least three
        years, to give any third party, for a charge no more than your
        cost of physically performing source distribution, a complete
        machine-readable copy of the corresponding source code, to be
        distributed under the terms of Sections 1 and 2 above on a medium
        customarily used for software interchange; or,
    
        c) Accompany it with the information you received as to the offer
        to distribute corresponding source code.  (This alternative is
        allowed only for noncommercial distribution and only if you
        received the program in object code or executable form with such
        an offer, in accord with Subsection b above.)
    
    The source code for a work means the preferred form of the work for
    making modifications to it.  For an executable work, complete source
    code means all the source code for all modules it contains, plus any
    associated interface definition files, plus the scripts used to
    control compilation and installation of the executable.  However, as a
    special exception, the source code distributed need not include
    anything that is normally distributed (in either source or binary
    form) with the major components (compiler, kernel, and so on) of the
    operating system on which the executable runs, unless that component
    itself accompanies the executable.
    
    If distribution of executable or object code is made by offering
    access to copy from a designated place, then offering equivalent
    access to copy the source code from the same place counts as
    distribution of the source code, even though third parties are not
    compelled to copy the source along with the object code.
    
      4. You may not copy, modify, sublicense, or distribute the Program
    except as expressly provided under this License.  Any attempt
    otherwise to copy, modify, sublicense or distribute the Program is
    void, and will automatically terminate your rights under this License.
    However, parties who have received copies, or rights, from you under
    this License will not have their licenses terminated so long as such
    parties remain in full compliance.
    
      5. You are not required to accept this License, since you have not
    signed it.  However, nothing else grants you permission to modify or
    distribute the Program or its derivative works.  These actions are
    prohibited by law if you do not accept this License.  Therefore, by
    modifying or distributing the Program (or any work based on the
    Program), you indicate your acceptance of this License to do so, and
    all its terms and conditions for copying, distributing or modifying
    the Program or works based on it.
    
      6. Each time you redistribute the Program (or any work based on the
    Program), the recipient automatically receives a license from the
    original licensor to copy, distribute or modify the Program subject to
    these terms and conditions.  You may not impose any further
    restrictions on the recipients' exercise of the rights granted herein.
    You are not responsible for enforcing compliance by third parties to
    this License.
    
      7. If, as a consequence of a court judgment or allegation of patent
    infringement or for any other reason (not limited to patent issues),
    conditions are imposed on you (whether by court order, agreement or
    otherwise) that contradict the conditions of this License, they do not
    excuse you from the conditions of this License.  If you cannot
    distribute so as to satisfy simultaneously your obligations under this
    License and any other pertinent obligations, then as a consequence you
    may not distribute the Program at all.  For example, if a patent
    license would not permit royalty-free redistribution of the Program by
    all those who receive copies directly or indirectly through you, then
    the only way you could satisfy both it and this License would be to
    refrain entirely from distribution of the Program.
    
    If any portion of this section is held invalid or unenforceable under
    any particular circumstance, the balance of the section is intended to
    apply and the section as a whole is intended to apply in other
    circumstances.
    
    It is not the purpose of this section to induce you to infringe any
    patents or other property right claims or to contest validity of any
    such claims; this section has the sole purpose of protecting the
    integrity of the free software distribution system, which is
    implemented by public license practices.  Many people have made
    generous contributions to the wide range of software distributed
    through that system in reliance on consistent application of that
    system; it is up to the author/donor to decide if he or she is willing
    to distribute software through any other system and a licensee cannot
    impose that choice.
    
    This section is intended to make thoroughly clear what is believed to
    be a consequence of the rest of this License.
    
      8. If the distribution and/or use of the Program is restricted in
    certain countries either by patents or by copyrighted interfaces, the
    original copyright holder who places the Program under this License
    may add an explicit geographical distribution limitation excluding
    those countries, so that distribution is permitted only in or among
    countries not thus excluded.  In such case, this License incorporates
    the limitation as if written in the body of this License.
    
      9. The Free Software Foundation may publish revised and/or new versions
    of the General Public License from time to time.  Such new versions will
    be similar in spirit to the present version, but may differ in detail to
    address new problems or concerns.
    
    Each version is given a distinguishing version number.  If the Program
    specifies a version number of this License which applies to it and "any
    later version", you have the option of following the terms and conditions
    either of that version or of any later version published by the Free
    Software Foundation.  If the Program does not specify a version number of
    this License, you may choose any version ever published by the Free Software
    Foundation.
    
      10. If you wish to incorporate parts of the Program into other free
    programs whose distribution conditions are different, write to the author
    to ask for permission.  For software which is copyrighted by the Free
    Software Foundation, write to the Free Software Foundation; we sometimes
    make exceptions for this.  Our decision will be guided by the two goals
    of preserving the free status of all derivatives of our free software and
    of promoting the sharing and reuse of software generally.
    
                                NO WARRANTY
    
      11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
    FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
    OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
    PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
    OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
    MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
    TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
    PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
    REPAIR OR CORRECTION.
    
      12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
    WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
    REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
    INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
    OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
    TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
    YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
    PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGES.
    
                         END OF TERMS AND CONDITIONS
    
                How to Apply These Terms to Your New Programs
    
      If you develop a new program, and you want it to be of the greatest
    possible use to the public, the best way to achieve this is to make it
    free software which everyone can redistribute and change under these terms.
    
      To do so, attach the following notices to the program.  It is safest
    to attach them to the start of each source file to most effectively
    convey the exclusion of warranty; and each file should have at least
    the "copyright" line and a pointer to where the full notice is found.
    
        {description}
        Copyright (C) {year}  {fullname}
    
        This program is free software; you can redistribute it and/or modify
        it under the terms of the GNU General Public License as published by
        the Free Software Foundation; either version 2 of the License, or
        (at your option) any later version.
    
        This program is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        GNU General Public License for more details.
    
        You should have received a copy of the GNU General Public License along
        with this program; if not, write to the Free Software Foundation, Inc.,
        51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
    
    Also add information on how to contact you by electronic and paper mail.
    
    If the program is interactive, make it output a short notice like this
    when it starts in an interactive mode:
    
        Gnomovision version 69, Copyright (C) year name of author
        Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
        This is free software, and you are welcome to redistribute it
        under certain conditions; type `show c' for details.
    
    The hypothetical commands `show w' and `show c' should show the appropriate
    parts of the General Public License.  Of course, the commands you use may
    be called something other than `show w' and `show c'; they could even be
    mouse-clicks or menu items--whatever suits your program.
    
    You should also get your employer (if you work as a programmer) or your
    school, if any, to sign a "copyright disclaimer" for the program, if
    necessary.  Here is a sample; alter the names:
    
      Yoyodyne, Inc., hereby disclaims all copyright interest in the program
      `Gnomovision' (which makes passes at compilers) written by James Hacker.
    
      {signature of Ty Coon}, 1 April 1989
      Ty Coon, President of Vice
    
    This General Public License does not permit incorporating your program into
    proprietary programs.  If your program is a subroutine library, you may
    consider it more useful to permit linking proprietary applications with the
    library.  If this is what you want to do, use the GNU Lesser General
    Public License instead of this License.
    
- Type: File
  path: .stfolder
  Contents: 
- Type: File
  path: .stignore
  Contents: |2
    // .stignore
    //
    #include .stglobalignore
    
- Type: File
  path: .gitignore
  Contents: |2
    assets/public/*
    assets/private/*
    assets/backup/*
    backup/*
    
    source/vendor
    source/web/core
    source/web/modules/contrib
    source/web/themes/contrib
    source/web/profiles/contrib
    
    source/web/sites/example.*
    source/web/sites/*/default.*
    source/web/sites/*/services.local.yml
    source/web/sites/*/settings.local.php
    source/web/sites/*/files
    
    .DS_Store
    
- Type: File
  path: .stglobalignore
  Contents: |2
    // .stglobalignore
    
    // Incomplete Downloads
    // At least for now, these prevent Syncthing from transferring data that's
    // going to be thrown out anyway once the download is finished and the
    // file is renamed. Things may change when Syncthing gets smarter.
    //
    // Firefox downloads and other things
    *.part
    // Chrom(ium|e) downloads
    *.crdownload
    
    // Temporary / Backup Files
    *~
    .*.swp
    
    // OS-generated filed (linux)
    .directory
    .Trash-*
    
    
    // OS-generated files (OS X)
    .DS_Store
    .Spotlight-V100
    .Trashes
    ._*
    
    // OS-generated files (Windows)
    desktop.ini
    ehthumbs.db
    Thumbs.db
    
    // Editor files
    // Ignore files generated by PhpStorm
    .idea
    // VIM
    .*.swp
    
    // Composer lock files (shouldn't get copied)
    source/composer.lock
    
